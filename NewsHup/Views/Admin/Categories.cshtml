@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-header">
    <h4 class="page-title">Category Management</h4>
    <ul class="breadcrumbs">
        <li class="nav-home">
            <a href="#">
                <i class="icon-home"></i>
            </a>
        </li>
        <li class="separator">
            <i class="icon-arrow-right"></i>
        </li>
        <li class="nav-item">
            <a href="#">Category Management</a>
        </li>
    </ul>
</div>

<div class="col-md-12">
    <div class="card">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <h4 class="card-title">Our Categories</h4>
                <button class="btn btn-primary btn-round ms-auto" data-bs-toggle="modal" data-bs-target="#addCategoryModal" onclick="openAddModal()">
                    <i class="fa fa-plus"></i> Add Category
                </button>
            </div>
        </div>

        <div class="card-body">
            <!-- Table to display categories -->
            <div class="table-responsive">
                <table id="categoryTable" class="display table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Category ID</th>
                            <th>Category Name</th>
                            <th style="width: 10%">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var category in Model)
                        {
                            <tr id="category-row-@category.CategoryId">
                                <td>@category.CategoryId</td>
                                <td>@category.CategoryName</td>
                                <td>
                                    <div class="form-button-action">
                                        <!-- Edit button -->
                                        <button type="button" class="btn btn-link btn-primary btn-lg" onclick="editCategory(@category.CategoryId)">
                                            <i class="fa fa-edit"></i>
                                        </button>

                                        <!-- Delete button -->
                                        <button class="btn btn-link btn-danger" onclick="deleteCategory(@category.CategoryId)">
                                            <i class="fa fa-times"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Add/Edit Category Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title">Category</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="categoryError" class="text-danger" style="display:none;"></div>  <!-- Error message container -->
                <form id="categoryForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="categoryId" />
                    <div class="form-group form-group-default">
                        <label>Category Name</label>
                        <input id="categoryName" name="CategoryName" type="text" class="form-control" placeholder="Enter category name" required />
                    </div>
                </form>
            </div>

            <div class="modal-footer border-0">
                <button type="button" class="btn btn-primary" id="saveCategoryButton">Save</button>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<!-- Confirmation Modal for delete category -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Deletion</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this category?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmDeleteButton" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>

<script>
    var isEditMode = false;
    var currentCategoryId = null;
    var categoryIdToDelete = null; // Variable to store the ID of the category to delete

    // Open the modal for adding a new category
    function openAddModal() {
        isEditMode = false; // Set mode to add
        currentCategoryId = null; // No category ID for add
        $('#categoryForm')[0].reset(); // Reset the form
        $('#saveCategoryButton').text('Add'); // Change button text to 'Add'
        $('#categoryError').hide(); // Hide any previous error messages
        $('#addCategoryModal').modal('show'); // Show the modal
    }

    // Add or Edit category
    $('#saveCategoryButton').on('click', function () {
        var categoryName = $('#categoryName').val();

        if (isEditMode) {
            // Edit category request
            $.ajax({
                url: '@Url.Action("EditCategory", "Admin")',
                type: 'POST',
                data: {
                    CategoryId: currentCategoryId,
                    CategoryName: categoryName
                },
                success: function (response) {
                    if (response.success) {
                        var row = $('#category-row-' + currentCategoryId);
                        row.find('td:nth-child(2)').text(categoryName);  // Update category name
                        $('#addCategoryModal').modal('hide');  // Close modal
                        $('#categoryError').hide();  // Hide any error message
                    } else {
                        $('#categoryError').text(response.message).show();  // Display the error message
                    }
                },
                error: function () {
                    $('#categoryError').text("An error occurred while saving the category.").show();
                }
            });
        } else {
            // Add category request
            $.ajax({
                url: '@Url.Action("AddCategory", "Admin")',
                type: 'POST',
                data: { CategoryName: categoryName },
                success: function (response) {
                    if (response.success) {
                        // Add new row to table
                        var newRow = `
                                <tr id="category-row-${response.categoryId}">
                                    <td>${response.categoryId}</td>
                                    <td>${categoryName}</td>
                                    <td>
                                        <div class="form-button-action">
                                            <button type="button" class="btn btn-link btn-primary btn-lg" onclick="editCategory(${response.categoryId})">
                                                <i class="fa fa-edit"></i>
                                            </button>
                                            <button class="btn btn-link btn-danger" onclick="deleteCategory(${response.categoryId})">
                                                <i class="fa fa-times"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>`;
                        $('#categoryTable tbody').append(newRow);

                        $('#categoryForm')[0].reset();
                        $('#addCategoryModal').modal('hide');
                        $('#categoryError').hide();  // Hide any error message
                    } else {
                        $('#categoryError').text(response.message).show();  // Display the error message
                    }
                },
                error: function () {
                    $('#categoryError').text("An error occurred while adding the category.").show();
                }
            });
        }
    });

    // Edit category
    function editCategory(categoryId) {
        isEditMode = true; // Set mode to edit
        currentCategoryId = categoryId; // Store the current category ID

        // Make an AJAX call to get the category details
        $.get('@Url.Action("GetCategory", "Admin")', { id: categoryId }, function (response) {
            console.log('Response:', response);  // Log the full response for debugging

            if (response.success) {
                // Show the modal
                $('#addCategoryModal').modal('show');

                // Test: Set a hardcoded value first to ensure the input works
                $('#categoryName').val('Test');
                console.log('Category Name field value after setting "Test":', $('#categoryName').val());

                // Directly set the fetched value without any processing
                var categoryName = response.category.CategoryName;

                $('#categoryName').val(categoryName);  // Set the actual value
                console.log('Set Category Name from response:', $('#categoryName').val()); // Log the set value

                // Set button text to 'Save'
                $('#saveCategoryButton').text('Save');
                $('#categoryError').hide();  // Hide any previous error messages
            } else {
                $('#categoryError').text(response.message).show();  // Display error if category not found
            }
        });
    }












    // Trigger the confirmation modal for category deletion
    function deleteCategory(categoryId) {
        categoryIdToDelete = categoryId;  // Store the category ID to delete
        $('#confirmDeleteModal').modal('show');  // Show the confirmation modal
    }

    // When the user confirms deletion
    $('#confirmDeleteButton').on('click', function () {
        if (categoryIdToDelete !== null) {
            $.ajax({
                url: '@Url.Action("DeleteCategory", "Admin")',
                type: 'POST',
                data: { id: categoryIdToDelete },
                success: function (response) {
                    if (response.success) {
                        $('#category-row-' + categoryIdToDelete).fadeOut(500, function () {
                            $(this).remove();  // After fade-out, remove the row
                        });
                        $('#confirmDeleteModal').modal('hide');  // Close the confirmation modal
                    } else {
                        $('#categoryError').text(response.message).show();  // Display the error message
                    }
                },
                error: function () {
                    $('#categoryError').text("An error occurred while deleting the category.").show();
                }
            });
        }
    });






</script>
