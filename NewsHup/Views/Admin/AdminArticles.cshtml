@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-header">
    <h4 class="page-title">Article Management</h4>
    <ul class="breadcrumbs">
        <li class="nav-home">
            <a href="#">
                <i class="icon-home"></i>
            </a>
        </li>
        <li class="separator">
            <i class="icon-arrow-right"></i>
        </li>
        <li class="nav-item">
            <a href="#">Article Management</a>
        </li>
    </ul>
</div>

<div class="col-md-12">
    <div class="card">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <h4 class="card-title">Articles</h4>
                <button class="btn btn-primary btn-round ms-auto" data-bs-toggle="modal" data-bs-target="#addArticleModal" onclick="openAddModal()">
                    <i class="fa fa-plus"></i> Add Article
                </button>
            </div>
        </div>

        <div class="card-body">
            <div class="table-responsive">
                <table id="articleTable" class="display table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Article ID</th>
                            <th>Title</th>
                            <th>Category</th>
                            <th>Owner</th> 
                            <th>Publish Date</th>
                            <th style="width: 10%">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var article in Model)
                        {
                            <tr id="article-row-@article.Id">
                                <td>@article.Id</td>
                                <td>@article.Title</td>
                                <td>@article.Category?.CategoryName</td>
                                <td>@article.User?.Name</td> 
                                <td>@article.PublishDate.ToString("yyyy-MM-dd")</td>

                                <td>
                                    <div class="form-button-action">
                                        <button type="button" class="btn btn-link btn-primary btn-lg btn-edit" data-id="@article.Id">
                                            <i class="fa fa-edit"></i>
                                        </button>
                                        <button class="btn btn-link btn-danger btn-delete" data-id="@article.Id">
                                            <i class="fa fa-times"></i>
                                        </button>
                                    </div>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Add/Edit Article Modal -->
<!-- Add Article Modal -->

<div class="modal fade" id="addArticleModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title">Add Article</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addArticleForm">
                    @Html.AntiForgeryToken()

                    <div class="form-group form-group-default">
                        <label>Article Title</label>
                        <input id="addArticleTitle" name="Title" type="text" class="form-control" placeholder="Enter article title" required />
                        <small class="text-danger" id="titleError"></small>
                    </div>

                    <div class="form-group form-group-default">
                        <label>Content</label>
                        <textarea id="addArticleContent" name="Content" class="form-control" placeholder="Enter article content" required></textarea>
                        <small class="text-danger" id="contentError"></small>
                    </div>

                    <div class="form-group form-group-default">
                        <label>Category</label>
                        <select id="addArticleCategory" name="CatId" class="form-control" required>
                            <option value="" disabled selected>Select a category</option>
                            @foreach (var category in ViewBag.Categories)
                            {
                                <option value="@category.CategoryId">@category.CategoryName</option>
                            }
                        </select>
                        <small class="text-danger" id="categoryError"></small>
                    </div>

                    <div class="form-group form-group-default">
                        <label>User</label>
                        <select id="addArticleUser" name="UserId" class="form-control" required>
                            <option value="" disabled selected>Select a user</option>
                            @foreach (var user in ViewBag.Users)
                            {
                                <option value="@user.Id">@user.Name</option>
                            }
                        </select>
                        <small class="text-danger" id="userError"></small>
                    </div>

                    <div class="form-group form-group-default">
                        <label>Image URL</label>
                        <input id="addArticleImageUrl" name="ImageUrl" type="text" class="form-control" placeholder="Enter image URL" />
                        <small class="text-danger" id="imageUrlError"></small>
                    </div>

                    <div class="form-group form-group-default">
                        <label>Publish Date</label>
                        <input id="addArticlePublishDate" name="PublishDate" type="date" class="form-control" placeholder="Enter publish date" required />
                        <small class="text-danger" id="publishDateError"></small>
                    </div>

                </form>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-primary" id="addArticleButton">Add</button>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<!-- Edit Article Modal -->
<div class="modal fade" id="editArticleModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title">Edit Article</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editArticleForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="editArticleId" name="Id" />

                    <div class="form-group form-group-default">
                        <label>Article Title</label>
                        <input id="editArticleTitle" name="Title" type="text" class="form-control" required />
                        <small class="text-danger" id="editTitleError"></small>
                    </div>

                    <div class="form-group form-group-default">
                        <label>Content</label>
                        <textarea id="editArticleContent" name="Content" class="form-control" required></textarea>
                        <small class="text-danger" id="editContentError"></small>
                    </div>

                    <div class="form-group form-group-default">
                        <label>Category</label>
                        <select id="editArticleCategory" name="CatId" class="form-control" required>
                            <option value="" disabled>Select a category</option>
                            @foreach (var category in ViewBag.Categories)
                            {
                                <option value="@category.CategoryId">@category.CategoryName</option>
                            }
                        </select>
                        <small class="text-danger" id="editCategoryError"></small>
                    </div>

                    <div class="form-group form-group-default">
                        <label>User</label>
                        <select id="editArticleUser" name="UserId" class="form-control" required>
                            <option value="" disabled>Select a user</option>
                            @foreach (var user in ViewBag.Users)
                            {
                                <option value="@user.Id">@user.Name</option>
                            }
                        </select>
                        <small class="text-danger" id="editUserError"></small>
                    </div>

                    <div class="form-group form-group-default">
                        <label>Image URL</label>
                        <input id="editArticleImageUrl" name="ImageUrl" type="text" class="form-control" />
                        <small class="text-danger" id="editImageUrlError"></small>
                    </div>

                    <div class="form-group form-group-default">
                        <label>Publish Date</label>
                        <input id="editArticlePublishDate" name="PublishDate" type="date" class="form-control" required />
                        <small class="text-danger" id="editPublishDateError"></small>
                    </div>
                </form>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-primary" id="saveEditArticleButton">Save</button>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteArticleModal" tabindex="-1" role="dialog" aria-labelledby="deleteArticleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteArticleModalLabel">Confirm Deletion</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this article?</p>
                <input type="hidden" id="deleteArticleId" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteArticleButton">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Script at the bottom of the page -->
<script>
    $(document).ready(function () {
        var currentArticleId = null;

        // Function to open the delete confirmation modal
        function deleteArticle(articleId) {
            currentArticleId = articleId;  // Set the article ID
            $('#deleteArticleId').val(articleId);  // Store the article ID in a hidden input
            $('#deleteArticleModal').modal('show');  // Show the delete confirmation modal
        }

        // Handle the actual deletion once the user confirms
        $('#confirmDeleteArticleButton').on('click', function () {
            var articleId = $('#deleteArticleId').val();

            $.ajax({
                url: '@Url.Action("DeleteArticle", "Admin")',  // Delete URL
                type: 'POST',
                data: { id: articleId },
                success: function (response) {
                    if (response.success) {
                        $('#deleteArticleModal').modal('hide');  // Close the modal
                        $('#article-row-' + articleId).fadeOut(500, function () {
                            $(this).remove();  // Remove the article row from the table
                        });
                    } else {
                        displayError('Failed to delete article.');
                    }
                },
                error: function () {
                    displayError('Error occurred while deleting article.');
                }
            });
        });

        // Open the modal for adding a new article
        function openAddModal() {
            currentArticleId = null;  // Set to add mode
            resetAddArticleForm();  // Reset the form fields
            $('#addArticleButton').text('Add Article');  // Change button text to 'Add'
            $('#addArticleModal').modal('show');  // Show the modal
        }

        // Open the modal for editing an article
        function editArticle(articleId) {
            currentArticleId = articleId;  // Set the current article ID
            resetEditArticleForm();  // Reset the form before populating data

            // Fetch article data using AJAX and populate the form
            $.get('@Url.Action("GetArticle", "Admin")', { id: articleId }, function (response) {
                if (response.success) {
                    // Populate the form with article data
                    $('#editArticleId').val(response.article.id);
                    $('#editArticleTitle').val(response.article.title);
                    $('#editArticleContent').val(response.article.content);
                    $('#editArticleCategory').val(response.article.catId);
                    $('#editArticleUser').val(response.article.userId);
                    $('#editArticleImageUrl').val(response.article.imageUrl);
                    $('#editArticlePublishDate').val(response.article.publishDate.split('T')[0]);  // Format date

                    $('#saveEditArticleButton').text('Save Changes');  // Change button text to 'Save'
                    $('#editArticleModal').modal('show');  // Show the modal
                } else {
                    displayError('Failed to fetch article details.');
                }
            }).fail(function () {
                displayError('Error fetching article data.');
            });
        }

        // Submit Add Article form
        $('#addArticleButton').on('click', function () {
            var articleData = {
                Title: $('#addArticleTitle').val(),
                Content: $('#addArticleContent').val(),
                CatId: $('#addArticleCategory').val(),
                UserId: $('#addArticleUser').val(),
                ImageUrl: $('#addArticleImageUrl').val(),
                PublishDate: $('#addArticlePublishDate').val()
            };

            // Clear previous errors
            clearErrors();

            $.ajax({
                url: '@Url.Action("AddArticle", "Admin")',
                type: 'POST',
                data: articleData,
                success: function (response) {
                    if (response.success) {
                        $('#addArticleModal').modal('hide');  // Close the modal
                        location.reload();  // Reload the page to reflect changes
                    } else {
                        displayErrors(response.errors);
                    }
                },
                error: function () {
                    displayError('An error occurred while adding the article.');
                }
            });
        });

        // Submit Edit Article form
        $('#saveEditArticleButton').on('click', function () {
            var articleData = {
                Id: $('#editArticleId').val(),
                Title: $('#editArticleTitle').val(),
                Content: $('#editArticleContent').val(),
                CatId: $('#editArticleCategory').val(),
                UserId: $('#editArticleUser').val(),
                ImageUrl: $('#editArticleImageUrl').val(),
                PublishDate: $('#editArticlePublishDate').val()
            };

            // Clear previous errors
            clearEditErrors();

            $.ajax({
                url: '@Url.Action("EditArticle", "Admin")',
                type: 'POST',
                data: articleData,
                success: function (response) {
                    if (response.success) {
                        $('#editArticleModal').modal('hide');  // Close the modal
                        location.reload();  // Reload the page to reflect changes
                    } else {
                        displayEditErrors(response.errors);
                    }
                },
                error: function () {
                    displayError('An error occurred while updating the article.');
                }
            });
        });

        // Function to display validation errors for Add
        function displayErrors(errors) {
            if (errors.Title) {
                $('#titleError').text(errors.Title);
            }
            if (errors.Content) {
                $('#contentError').text(errors.Content);
            }
            if (errors.CatId) {
                $('#categoryError').text(errors.CatId);
            }
            if (errors.UserId) {
                $('#userError').text(errors.UserId);
            }
            if (errors.ImageUrl) {
                $('#imageUrlError').text(errors.ImageUrl);
            }
            if (errors.PublishDate) {
                $('#publishDateError').text(errors.PublishDate);
            }
        }

        // Function to display validation errors for Edit
        function displayEditErrors(errors) {
            if (errors.Title) {
                $('#editTitleError').text(errors.Title);
            }
            if (errors.Content) {
                $('#editContentError').text(errors.Content);
            }
            if (errors.CatId) {
                $('#editCategoryError').text(errors.CatId);
            }
            if (errors.UserId) {
                $('#editUserError').text(errors.UserId);
            }
            if (errors.ImageUrl) {
                $('#editImageUrlError').text(errors.ImageUrl);
            }
            if (errors.PublishDate) {
                $('#editPublishDateError').text(errors.PublishDate);
            }
        }

        // Function to clear errors
        function clearErrors() {
            $('#titleError').text('');
            $('#contentError').text('');
            $('#categoryError').text('');
            $('#userError').text('');
            $('#imageUrlError').text('');
            $('#publishDateError').text('');
        }

        function clearEditErrors() {
            $('#editTitleError').text('');
            $('#editContentError').text('');
            $('#editCategoryError').text('');
            $('#editUserError').text('');
            $('#editImageUrlError').text('');
            $('#editPublishDateError').text('');
        }

        // Use event delegation for dynamically generated elements (edit and delete buttons)
        $(document).on('click', '.btn-edit', function () {
            var articleId = $(this).data('id');  // Get the article ID from data-id attribute
            editArticle(articleId);  // Call the edit function
        });

        $(document).on('click', '.btn-delete', function () {
            var articleId = $(this).data('id');  // Get the article ID from data-id attribute
            deleteArticle(articleId);  // Call the delete function
        });

        // Reset forms before displaying them
        function resetAddArticleForm() {
            if ($('#addArticleForm').length) {
                $('#addArticleForm')[0].reset();  // Reset Add form if it exists
            } else {
                console.error('Add Article Form not found');
            }
        }

        function resetEditArticleForm() {
            if ($('#editArticleForm').length) {
                $('#editArticleForm')[0].reset();  // Reset Edit form if it exists
            } else {
                console.error('Edit Article Form not found');
            }
        }

    });
</script>
